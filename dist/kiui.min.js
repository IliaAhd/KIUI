(()=>{async function l(a="./data.json"){try{let e=await fetch(a);if(!e.ok)throw new Error("Failed to fetch data");return(await e.json()).data}catch(e){return console.error("Error loading Data:",e),null}}function h(a,e){let t=a.classList.contains("open");a.classList.contains("translate-x-full")?(a.classList.toggle("translate-x-0"),a.classList.toggle("translate-x-full")):a.classList.toggle("hidden");let[s,i]=e.children;t?(s.classList.remove("opacity-0"),s.classList.add("opacity-100"),i.classList.remove("opacity-100"),i.classList.add("opacity-0"),a.classList.remove("open")):(s.classList.remove("opacity-100"),s.classList.add("opacity-0"),i.classList.remove("opacity-0"),i.classList.add("opacity-100"),a.classList.add("open"))}var n=class extends HTMLElement{async connectedCallback(){let e=await l();if(!e)return;let t=e.menu.items.map(s=>`<li class="menu-item"><a class="transition-colors">${s}</a></li>`).join("");this.render(e.menu.title,t),this.setLinks(e.menu.links),this.setupMobileToggle()}render(e,t){this.innerHTML=`
      <nav class="menu-background bg-white shadow-md fixed w-full top-0 left-0 z-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex items-center justify-between h-16">

          <!-- Logo -->
          <h1 class="menu-main-title text-xl font-bold text-black transition-colors">
            <a href="./index.html">${e}</a>
          </h1>

          <!-- Hamburger Button (Mobile) -->
          <div class="md:hidden">
            <button id="hamburger-btn" class="relative w-6 h-6">
              <svg class="absolute inset-0 w-6 h-6 transition-opacity duration-300 opacity-100 hamburger-icon" fill="none" stroke="currentColor" stroke-width="2"
                   viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16"/>
              </svg>
              <svg class="absolute inset-0 w-6 h-6 transition-opacity duration-300 opacity-0 close-icon" fill="none" stroke="currentColor" stroke-width="2"
                   viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
              </svg>
            </button>
          </div>

          <!-- Desktop Menu -->
          <ul class="menuItemsWrapper hidden md:flex gap-6 text-gray-700 font-medium *:transition-all">
            ${t}
          </ul>
        </div>

        <!-- Mobile Menu -->
        <div id="mobile-menu" class="md:hidden hidden fixed top-16 right-0 w-2/3 h-full bg-white shadow-lg px-6 py-4 flex-col gap-4 m-auto text-center">
          <ul class="flex flex-col gap-4 text-gray-800 font-semibold">
            ${t}
          </ul>
        </div>
      </nav>
    `}setLinks(e){this.querySelectorAll(".menu-item a").forEach((s,i)=>{s.setAttribute("href",e[i]||"#")})}setupMobileToggle(){let e=this.querySelector("#hamburger-btn"),t=this.querySelector("#mobile-menu"),s=e;e&&t&&s&&(s.children[0].classList.add("opacity-100"),s.children[1].classList.add("opacity-0"),e.addEventListener("click",()=>h(t,s)))}},c=class extends HTMLElement{async connectedCallback(){let e=await l();if(!e)return;let t=e.menu.items.map(s=>`<li class="menu-item"><a class="transition-colors">${s}</a></li>`).join("");this.render(e.menu.title,t),this.setLinks(e.menu.links),this.setupMobileToggle()}render(e,t){this.innerHTML=`
      <nav class="menu-background bg-slate-900 text-white fixed top-0 left-0 w-full z-50 shadow">
        <div class="max-w-7xl mx-auto px-4 py-4 flex items-center justify-between">

          <!-- Left: Hamburger + Logo -->
          <div class="flex items-center gap-4">
            <button id="hamburger-btn" class="relative w-6 h-6 md:hidden">
              <svg class="absolute inset-0 w-6 h-6 transition-opacity duration-300 opacity-100 hamburger-icon" fill="none" stroke="currentColor" stroke-width="2"
                   viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16"/>
              </svg>
              <svg class="absolute inset-0 w-6 h-6 transition-opacity duration-300 opacity-0 close-icon" fill="none" stroke="currentColor" stroke-width="2"
                   viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
              </svg>
            </button>
            <a href="./index.html" class="menu-main-title transition-colors text-xl font-bold">${e}</a>
          </div>

          <!-- Center Menu (Desktop) -->
          <ul class="menuItemsWrapper hidden md:flex gap-8 text-sm font-medium">
            ${t}
          </ul>

          <!-- Right Icons -->
          <div class="hidden md:flex items-center gap-4">
            <button title="Search">
              <svg class="w-5 h-5 text-white hover:text-indigo-400 transition" fill="none" stroke="currentColor" stroke-width="2"
                   viewBox="0 0 24 24">
                <circle cx="11" cy="11" r="8" />
                <line x1="21" y1="21" x2="16.65" y2="16.65" />
              </svg>
            </button>
          </div>
        </div>

        <!-- Sidebar Menu (Mobile) -->
        <div id="mobile-menu" class="fixed top-0 right-0 w-64 h-full bg-white text-gray-800 shadow-lg px-6 py-8 transform translate-x-full transition-transform duration-300 ease-in md:hidden z-50">
          <ul class="flex flex-col gap-6 font-semibold text-base">
            ${t}
          </ul>
        </div>
      </nav>
    `}setLinks(e){this.querySelectorAll(".menu-item a").forEach((s,i)=>{s.setAttribute("href",e[i]||"#")})}setupMobileToggle(){let e=this.querySelector("#hamburger-btn"),t=this.querySelector("#mobile-menu"),s=e;e&&t&&s&&(s.children[0].classList.add("opacity-100"),s.children[1].classList.add("opacity-0"),e.addEventListener("click",()=>h(t,s)))}};customElements.define("header-type-1",n);customElements.define("header-type-2",c);var d=class extends HTMLElement{async connectedCallback(){let{img:e,title:t,description:s,price:i,buttonTitle:r,buttonLink:o}=this.dataset;this.render(e,t,s,i,r,o)}render(e,t,s,i,r,o){this.innerHTML=`
      <!-- Product Card -->
      <div class="w-87 bg-white dark:bg-gray-900 rounded-2xl overflow-hidden shadow-md hover:shadow-xl hover:-translate-y-2 transition duration-300">
        <img class="w-full h-60 object-cover" src="${e||"./kiui.png"}" alt="${t||"default alt"}" />

        <div class="h-42 p-5 flex flex-col justify-between space-y-3">
          ${t?`<h2 class="text-lg sm:text-xl font-semibold text-gray-800 dark:text-white">${t}</h2>`:""}
          ${s?`<p class="text-sm text-gray-600 dark:text-gray-400">${s}</p>`:""}

          ${i||o?`<div class="flex items-center justify-between mt-4">
                  ${i?`<span class="text-lg font-bold text-slate-600 dark:text-indigo-400">$${i}</span>`:"<div></div>"}
                  ${r?`<a href="${o}" target="_blank" rel="noopener noreferrer" class="px-4 py-2 bg-slate-600 text-white rounded-xl hover:bg-slate-800 cursor-pointer transition">${r}</a>`:""}
                </div>`:""}
        </div>
      </div>
      <!-- Product Card -->
    `}};customElements.define("box-card-1",d);var m=class extends HTMLElement{async connectedCallback(){let e=await l();e&&this.render(e.footer)}render(e){this.innerHTML=`
    <div class="bg-gray-100 dark:bg-gray-900 text-gray-700 dark:text-gray-300 pt-10">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Top  -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-8 pb-10 border-b border-gray-300 dark:border-gray-700">
        <!-- Logo + Description  -->
        <div>
          <h2 class="text-2xl font-bold text-gray-800 dark:text-white">${e.title}</h2>
          <p class="mt-4 text-sm text-gray-600 dark:text-gray-400">${e.description}</p>
        </div>

        <!-- Links  -->
        <div>
          <h3 class="text-lg font-semibold mb-4">${e.footerItems.item1.title}</h3>
          <ul class="space-y-2 text-sm">
          ${e.footerItems.item1.items.map((t,s)=>`<li><a href="${e.footerItems.item1.links[s]}" class="hover:underline">${t}</a></li>`).join("")}
          </ul>
        </div>

        <div>
          <h3 class="text-lg font-semibold mb-4">${e.footerItems.item2.title}</h3>
          <ul class="space-y-2 text-sm">
          ${e.footerItems.item2.items.map((t,s)=>`<li><a href="${e.footerItems.item2.links[s]}" class="hover:underline">${t}</a></li>`).join("")}
          </ul>
        </div>

        <div>
          <h3 class="text-lg font-semibold mb-4">${e.footerItems.item3.title}</h3>
          <ul class="space-y-2 text-sm">
          ${e.footerItems.item2.items.map((t,s)=>`<li><a href="${e.footerItems.item2.links[s]}" class="hover:underline">${t}</a></li>`).join("")}
          </ul>
        </div>
      </div>

      <!-- Bottom  -->
      <div class="flex flex-col md:flex-row justify-between items-center py-6 gap-4">
        <p class="text-sm">&copy; ${new Date().getFullYear()} ${e.title}. All rights reserved.</p>
        <div class="flex space-x-4">
          <a href="#" class="hover:text-blue-500">
            Telegram
          </a>
          <a href="#" class="hover:text-blue-400">
            Twitter
          </a>
          <a href="#" class="hover:text-pink-500">
            Instagram
          </a>
          <a href="#" class="hover:text-gray-500">
            others
          </a>
        </div>
      </div>
    </div>
</div>
    `}},u=class extends HTMLElement{async connectedCallback(){let e=await l();e&&this.render(e.footer)}render(e){this.innerHTML=`
    <footer class="bg-gray-900 text-gray-200 py-12">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-10">
          <h2 class="text-3xl font-extrabold text-white">${e.title}</h2>
          <p class="mt-2 text-sm text-gray-400">${e.description}</p>
        </div>

        <!-- Newsletter -->
        <div class="flex flex-col sm:flex-row justify-center items-center gap-4 mb-10">
          <input
            type="email"
            placeholder="Enter your email"
            class="w-full sm:w-80 px-4 py-2 rounded-md text-slate-300 outline-1 focus:outline-blue-600"
          />
          <button
            class="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-6 py-2 rounded-md transition duration-200"
          >
            Subscribe
          </button>
        </div>

        <!-- Links -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-10 text-center md:text-left border-t border-gray-700 pt-10">
          ${Object.values(e.footerItems).map(t=>`
            <div>
              <h3 class="text-lg font-semibold mb-4">${t.title}</h3>
              <ul class="space-y-2 text-sm">
                ${t.items.map((s,i)=>`<li><a href="${t.links[i]}" class="hover:underline">${s}</a></li>`).join("")}
              </ul>
            </div>
          `).join("")}
        </div>

        <!-- Bottom Social -->
        <div class="mt-12 flex flex-col md:flex-row justify-between items-center text-sm text-gray-500 border-t border-gray-700 pt-6 gap-4">
          <p>&copy; ${new Date().getFullYear()} ${e.title}. All rights reserved.</p>
          <div class="flex gap-4">
            <a href="#" class="hover:text-blue-500">Telegram</a>
            <a href="#" class="hover:text-blue-400">Twitter</a>
            <a href="#" class="hover:text-pink-500">Instagram</a>
            <a href="#" class="hover:text-gray-400">Others</a>
          </div>
        </div>
      </div>
    </footer>
    `}};customElements.define("footer-type-1",m);customElements.define("footer-type-2",u);})();
